# import Role, RoleWhereInput, RoleOrderByInput, RoleWhereUniqueInput, RoleCreateInput, RoleUpdateInput from "./generated/prisma.graphql"

type User {
  id: ID!
  name: String!
  email: String!
}

type AuthPayload {
  user: User!
  token: String!
}

type Query {
  me: User

  role(where: RoleWhereUniqueInput!): Role
  roles(
    where: RoleWhereInput
    orderBy: RoleOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Role]!
}

type Mutation {
  signin(email: String!, password: String!): AuthPayload!
  signup(email: String!, password: String!, name: String!): AuthPayload!

  createRole(data: RoleCreateInput!): Role!
  updateRole(data: RoleUpdateInput!, where: RoleWhereUniqueInput!): Role
  deleteRole(where: RoleWhereUniqueInput!): Role
}
